c
n
quit
user.errors
n
strong_params
user
c
q
user.is_password?("1")
user.is_password?
user
quit
user.id
user
user.is_password?("1")
user.is_password?(1)
user
q
y
:quit
user.is_password?('a')
user.is_password?
user.is_password
user
c
n
user
quit
user.is_password?(1)
user.is_password?
user.methods.include?(:is_password?)
user.methods
ls user
user
user.is_password?(pwd)
user
pwd
c
user.is_password?('abcdef')
user.is_password?
expect(user.is_password?('abcdef')).to
c
n
User.all
User
USer
user.is_password?('abcdef')
user.is_password?
user.id
user
user.is_password?('abcdef')
user
quit
:user
user
c
url
method
url
c
k == :style
k
s
n
k
n
k
s
n
s
n
elem_hash
n
hash
s
n
c
n
options
n
options
tag
c
attrs
n
hash
n
hash
s
n
options
n
quit
children
children_arr
c
curr_user
session[:token]
user
c
user
c
BCrypt::Password.new(User.find_by(email: strong_params[:email]).password_digest) == '123456'
User.find_by(email: strong_params[:email]).password_digest
User.find_by(email: strong_params[:email])
User.find_with_password(email: strong_params[:email], password: strong_params[:password])
User
strong_params
@user
c
self
c
self
c
self
@password_digest
c
pwd
c
n
@password_digest
self
n
@password_digest
c
n
c
n
url
c
n
